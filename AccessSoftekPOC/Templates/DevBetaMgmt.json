{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customerPrefix": {
      "metadata": {
        "description": "The 3 character prefix of the customer name"
      },
      "type": "string"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on provisioned machines"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual Network to be created"
      }
    }
  },
  "variables": {
    "adPDCModulesURL": "[concat(variables('AssetLocation'),'/astdevbetamgmtdcdsc.ps1.zip')]",
    "adPDCConfigurationFunction": "astdevbetamgmtdcdsc.ps1\\AD1",
    "AssetLocation": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/DSC",
    "availabilitySetName": "[concat(parameters('customerPrefix'),'dbmdcas')]",
    "BastionvmName": "[concat(parameters('customerPrefix'),'devbetabas')]",
    "BastionVMSize": "Standard_A1",
    "BastionimageOffer": "WindowsServer",
    "BastionimagePublisher": "MicrosoftWindowsServer",
    "BastionimageSKU": "2012-R2-Datacenter",
    "BastionnicName": "DevBeta-BAS-nic",
    "DCvmName": "[concat(parameters('customerPrefix'),'devbetaad')]",
    "DCVMSize": "Standard_A1",
    "DCimageOffer": "WindowsServer",
    "DCimagePublisher": "MicrosoftWindowsServer",
    "DCimageSKU": "2012-R2-Datacenter",
    "DCnicName": "DevBeta-DC-nic",
    "dnsNameForPublicIP": "[concat(parameters('customerPrefix'),'dbmbastion')]",
    "publicIPAddressName": "[concat(parameters('customerPrefix'),'dbmpip1')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicIPAddressType": "Dynamic",
    "storageAccountName": "[concat(parameters('customerPrefix'),'dbmstor01')]",
    "storageAccountType": "Standard_LRS",
    "subnetName": "DevBetaMgmt",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "vnetID": "[resourceID('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
  "resources": [
    //Create Storage account for Mgmt VMs
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Mgmt Storage Account"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    //Create Public IP Address for Bastion host
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Bastion Public IP Address"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    //Create Availability Set for the Domain Controllers
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "DC Availability Set"
      },
      "properties": {
        "platformFaultDomainCount": "2"
      }
    },
    //Create Network Interfaces
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('DCnicName'), '0')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "DC Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.14.4",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.14.4",
            "10.0.14.5"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('DCnicName'), '1')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "DC Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.14.5",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.14.4",
            "10.0.14.5"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('BastionnicName'), '0')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "tags": {
        "displayName": "Bastion Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.14.4",
            "10.0.14.5"
          ]
        }
      }
    },
    //Create Virtual Machines
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('DCvmName'), '01')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('DCnicName'), '0')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "tags": {
        "displayName": "DC VM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('DCVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('DCvmName'), '01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('DCimagePublisher')]",
            "offer": "[variables('DCimageOffer')]",
            "sku": "[variables('DCimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/',variables('DCvmName'),'01-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('DCnicName')), '0')]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-05-01-preview",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('DCvmName'), '01/CreateADForest')]",
          "location": "[parameters('location')]",
          "tags": {
            "displayName": "DC1 DSC"
          },
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('DCvmName'),'01')]"
          ],
          "properties": {
            "publisher": "Microsoft.PowerShell",
            "type": "DSC",
            "typeHandlerVersion": "1.9",
            "settings": {
              "ModulesUrl": "[variables('adPDCModulesURL')]",
              "ConfigurationFunction": "[variables('adPDCConfigurationFunction')]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('DCvmName'), '02')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('DCnicName'), '1')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('DCvmName'),'01')]"
      ],
      "tags": {
        "displayName": "DC VM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('DCVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('DCvmName'), '02')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('DCimagePublisher')]",
            "offer": "[variables('DCimageOffer')]",
            "sku": "[variables('DCimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/',variables('DCvmName'),'02-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('DCnicName')), '1')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('BastionvmName'), '01')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('BastionnicName'), '0')]"
      ],
      "tags": {
        "displayName": "Bastion VM"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('BastionVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('BastionvmName'), '01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('BastionimagePublisher')]",
            "offer": "[variables('BastionimageOffer')]",
            "sku": "[variables('BastionimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/',variables('BastionvmName'),'01-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('BastionnicName')), '0')]"
            }
          ]
        }
      }
    }
  ]
}
