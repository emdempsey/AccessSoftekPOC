{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on provisioned machines"
      },
      "defaultValue": "Office365"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for virtual machines"
      },
      "defaultValue": "nimda"
    },
    "customerLocation": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      },
      "defaultValue": "West US"
    },
    "customerPrefix": {
      "type": "string",
      "metadata": {
        "description": "The 3 character prefix of the customer name"
      },
      "defaultValue": "mac"
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "lower case DNS name used for public access to the services"
      },
      "defaultValue": "astservices"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual Network to be created"
      },
      "defaultValue": "macvnet01"
    }
  },
  "variables": {
    "Environment": "pub",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "loadBalancerName": "[concat(parameters('customerPrefix'),variables('Environment'),'lb01')]",
    "PubAvailabilitySetName": "[concat(parameters('customerPrefix'),variables('Environment'),'as')]",
    "PubimageOffer": "vlm-azure",
    "PubimagePublisher": "[resourceID(concat('Microsoft.Compute/locations/',parameters('customerLocation'),'/Publishers'),'Kemptech')]",//"KempTech",
    "PubimageSKU": "basic-byol",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicIPAddressName": "[concat(parameters('customerPrefix'),variables('Environment'),'pip01')]",
    "publicIPAddressType": "Static",
    "PubnicName": "[concat(variables('Environment'),'-nic')]",
    "PubStorageAccountName": "[concat(parameters('customerPrefix'),variables('Environment'),'stor01')]",
    "PubSubnetName": "Public",
    "PubSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('PubSubnetName'))]",
    "PubVMCount": 2,
    "PubvmName": "[concat(parameters('customerPrefix'),variables('Environment'),'vm')]",
    "PubVMSize": "Standard_A3",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceID('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
  "resources": [
    //Create Web Availability Set
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('PubAvailabilitySetName')]",
      "location": "[parameters('customerLocation')]",
      "tags": {
        "displayName": "Public Availability Set"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 3
      }
    },
    //Create Public IP Address for Public Access
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('customerLocation')]",
      "tags": {
        "displayName": "Public IP Address"
      },
      "properties": {
        "publicIPAlcustomerLocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    //Create Public Storage Account
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('PubStorageAccountName')]",
      "location": "[parameters('customerLocation')]",
      "tags": {
        "displayName": "Public Storage Account"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    //Create load balancer for public access
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('customerLocation')]",
      "tags": {
        "displayName": "Public Load Balancer"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        // "inboundNatRules": [
        //             {
        //                 "name": "OCT-01",
        //                 "properties": {
        //                     "frontendIPConfiguration":
        //                         {
        //                             "id": "[variables('frontEndIPConfigID')]"
        //                         },
        //                     "protocol": "tcp",
        //                     "frontendPort": 10933,
        //                     "backendPort": 10933,
        //                     "enableFloatingIP": false
        //                 }
        //             },
        //             //{
        //             //    "name": "Oct-01",
        //             //    "properties": {
        //             //        "frontendIPConfiguration":
        //             //            {
        //             //                "id": "[variables('frontEndIPConfigID')]"
        //             //            },
        //             //        "protocol": "tcp",
        //             //        "frontendPort": 50002,
        //             //        "backendPort": 3389,
        //             //        "enableFloatingIP": false
        //             //    }
        //             //}
        //         ],
        "loadBalancingRules": [
          {
            "name": "HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    //Create Web Network Interfaces
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('PubnicName'), copyIndex())]",
      "location": "[parameters('customerLocation')]",
      "copy": {
        "name": "Pub-Nic-Loop",
        "count": "[variables('PubVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "Public Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAlcustomerLocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('PubSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    //Create Public Virtual Machines - Kemp or other NLB and WAF device
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('PubvmName'), copyIndex())]",
      "location": "[parameters('customerLocation')]",
      "copy": {
        "name": "Pub-VM-Loop",
        "count": "[variables('PubVMCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('PubStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('PubnicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('PubAvailabilitySetName'))]"
      ],
      "tags": {
        "displayName": "Public VM"
      },
      "plan": {
        "name": "[variables('PubimageSku')]",
        "publisher": "[variables('PubimagePublisher')]",
        "product": "[variables('PubimageOffer')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('PubAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('PubVMSize')]"
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPassword')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computername": "[concat(variables('PubvmName'), copyIndex())]",
          "customData": null,
          "LinuxConfiguration": {
            "DisablePasswordAuthentication": false
          },
          "Secrets": [ ]
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('PubimagePublisher')]",
            "offer": "[variables('PubimageOffer')]",
            "sku": "[variables('PubimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('PubStorageAccountName'),'.blob.core.windows.net/vhds/',variables('PubvmName'),copyIndex(),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('PubnicName')), copyIndex())]"
            }
          ]
        }
      }
    }
  ]
}
