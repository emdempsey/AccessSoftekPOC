{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "customerPrefix": {
      "metadata": {
        "description": "The 3 character prefix of the customer name"
      },
      "type": "string"
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "West US",
        "East US",
        "North Central US",
        "Central US",
        "South Central US",
        "East Asia",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual Network to be created"
      }
    },
    "vnetAddressSpacePrefix": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "The address space used by the Virtual network"
      }
    },
    "customerVPNAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the VPN device on the customer network"
      }
    },
    "customerVPNSubnet": {
      "type": "string",
      "metadata": {
        "description": "One of the subnets onthe customer's local network"
      }
    },
    "customerVPNVendor": {
      "type": "string",
      "metadata": {
        "description": "The vendor of the VPN device"
      }
    },
    "customerVPNPlatform": {
      "type": "string",
      "metadata": {
        "description": "The platform of the VPN device"
      }
    },
    "customerVPNfamily": {
      "type": "string",
      "metadata": {
        "description": "The OS family of the VPN Device"
      }
    },
    "customerVPNP2SSubnet": {
      "type": "string",
      "metadata": {
        "description": "A single IP address prefix inside the list of prefixes that will be used when assigning IP addresses to incoming Point-to-Site client connection requests"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "admin password applied to VMs"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "lower case DNS name used for public access to the services"
      }
    }
  },
  "variables": {
    "BetaAppNSGName": "[concat(variables('BetaAppSubnetName'),'nsg01')]",
    "BetaAppSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.6.0/24')]",
    "BetaAppSubnetName": "BetaApp",
    "BetaDataNSGName": "[concat(variables('BetaDataSubnetName'),'nsg01')]",
    "BetaDataSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.7.0/24')]",
    "BetaDataSubnetName": "BetaData",
    "BetaWebNSGName": "[concat(variables('BetaWebSubnetName'),'nsg01')]",
    "BetaWebSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.5.0/24')]",
    "BetaWebSubnetName": "BetaWeb",
    "DevAppNSGName": "[concat(variables('DevAppSubnetName'),'nsg01')]",
    "DevAppSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.3.0/24')]",
    "DevAppSubnetName": "DevApp",
    "DevBetaMgmtNSGName": "[concat(variables('DevBetaMgmtSubnetName'),'nsg01')]",
    "DevBetaMgmtSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.14.0/24')]",
    "DevBetaMgmtSubnetName": "DevBetaMgmt",
    "DevDataNSGName": "[concat(variables('DevDataSubnetName'),'nsg01')]",
    "DevDataSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.4.0/24')]",
    "DevDataSubnetName": "DevData",
    "DevWebNSGName": "[concat(variables('DevWebSubnetName'),'nsg01')]",
    "DevWebSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.2.0/24')]",
    "DevWebSubnetName": "DevWeb",
    "Environment": "pub",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
    "loadBalancerName": "[concat(parameters('customerPrefix'),variables('Environment'),'lb01')]",
    "NSGTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/NetworkSecurityGroups.json",
    "ProdAppNSGName": "[concat(variables('ProdAppSubnetName'),'nsg01')]",
    "ProdAppSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.12.0/24')]",
    "ProdAppSubnetName": "ProdApp",
    "ProdDataNSGName": "[concat(variables('ProdDataSubnetName'),'nsg01')]",
    "ProdDataSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.13.0/24')]",
    "ProdDataSubnetName": "ProdData",
    "ProdWebNSGName": "[concat(variables('ProdWebSubnetName'),'nsg01')]",
    "ProdWebSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.11.0/24')]",
    "ProdWebSubnetName": "ProdWeb",
    "PubAvailabilitySetName": "[concat(parameters('customerPrefix'),variables('Environment'),'as')]",
    "PubimageOffer": "WindowsServer", //"vlm-azure",
    "PubimagePublisher": "MicrosoftWindowsServer", //"KempTech",
    "PubimageSKU": "2012-R2-Datacenter", //"basic-byol",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicIPAddressName": "[concat(parameters('customerPrefix'),variables('Environment'),'pip01')]",
    "publicIPAddressType": "Static",
    "PubnicName": "[concat(variables('Environment'),'-nic')]",
    "PubNSGName": "[concat(variables('PubSubnetName'),'nsg01')]",
    "PubStorageAccountName": "[concat(parameters('customerPrefix'),variables('Environment'),'stor01')]",
    "PubSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.1.0/24')]",
    "PubSubnetName": "Public",
    "PubSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('PubSubnetName'))]",
    "PubvmName": "[concat(parameters('customerPrefix'),variables('Environment'),'vm')]",
    "PubVMSize": "Standard_A3",
    "StgAppNSGName": "[concat(variables('StgAppSubnetName'),'nsg01')]",
    "StgAppSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.9.0/24')]",
    "StgAppSubnetName": "StgApp",
    "StgDataNSGName": "[concat(variables('StgDataSubnetName'),'nsg01')]",
    "StgDataSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.10.0/24')]",
    "StgDataSubnetName": "StgData",
    "StgProdMgmtNSGName": "[concat(variables('StgProdMgmtSubnetName'),'nsg01')]",
    "StgProdMgmtSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.15.0/24')]",
    "StgProdMgmtSubnetName": "StgProdMgmt",
    "StgWebNSGName": "[concat(variables('StgWebSubnetName'),'nsg01')]",
    "StgWebSubnetAddressPrefix": "[concat(parameters('vnetAddressSpacePrefix'),'.8.0/24')]",
    "StgWebSubnetName": "StgWeb",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceID('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
  "resources": [
    //Create Web Availability Set
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('PubAvailabilitySetName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Public Availability Set"
      },
      "properties": {
        "platformFaultDomainCount": "2"
      }
    },
    //Create Public IP Address for Public Access
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Public IP Address"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    //Create Public Storage Account
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('PubStorageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Public Storage Account"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    //Create Web Network Interfaces
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('PubnicName'), '0')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "Public Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('PubSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.15.4",
            "10.0.15.5"
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('PubnicName'), '1')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "tags": {
        "displayName": "Public Interface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('PubSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "10.0.15.4",
            "10.0.15.5"
          ]
        }
      }
    },
    //Create Network Security Groups
    {
      "apiVersion": "2015-01-01",
      "name": "NetworkSecurityGroupTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('NSGTemplateLink')]" },
        "parameters": {
          "BetaAppNSGName": { "value": "[variables('BetaAppNSGName')]" },
          "BetaAppSubnetAddressPrefix": { "value": "[variables('BetaAppSubnetAddressPrefix')]" },
          "BetaDataNSGName": { "value": "[variables('BetaDataNSGName')]" },
          "BetaDataSubnetAddressPrefix": { "value": "[variables('BetaDataSubnetAddressPrefix')]" },
          "BetaWebNSGName": { "value": "[variables('BetaWebNSGName')]" },
          "BetaWebSubnetAddressPrefix": { "value": "[variables('BetaWebSubnetAddressPrefix')]" },
          "DevAppNSGName": { "value": "[variables('DevAppNSGName')]" },
          "DevAppSubnetAddressPrefix": { "value": "[variables('DevAppSubnetAddressPrefix')]" },
          "DevBetaMgmtNSGName": { "value": "[variables('DevBetaMgmtNSGName')]" },
          "DevBetaMgmtSubnetAddressPrefix": { "value": "[variables('DevBetaMgmtSubnetAddressPrefix')]" },
          "DevDataNSGName": { "value": "[variables('DevDataNSGName')]" },
          "DevDataSubnetAddressPrefix": { "value": "[variables('DevDataSubnetAddressPrefix')]" },
          "DevWebNSGName": { "value": "[variables('DevWebNSGName')]" },
          "DevWebSubnetAddressPrefix": { "value": "[variables('DevWebSubnetAddressPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "ProdAppNSGName": { "value": "[variables('ProdAppNSGName')]" },
          "ProdAppSubnetAddressPrefix": { "value": "[variables('ProdAppSubnetAddressPrefix')]" },
          "ProdDataNSGName": { "value": "[variables('ProdDataNSGName')]" },
          "ProdDataSubnetAddressPrefix": { "value": "[variables('ProdDataSubnetAddressPrefix')]" },
          "ProdWebNSGName": { "value": "[variables('ProdWebNSGName')]" },
          "ProdWebSubnetAddressPrefix": { "value": "[variables('ProdWebSubnetAddressPrefix')]" },
          "PubNSGName": { "value": "[variables('PubNSGName')]" },
          "PubSubnetAddressPrefix": { "value": "[variables('PubSubnetAddressPrefix')]" },
          "StgAppNSGName": { "value": "[variables('StgAppNSGName')]" },
          "StgAppSubnetAddressPrefix": { "value": "[variables('StgAppSubnetAddressPrefix')]" },
          "StgDataNSGName": { "value": "[variables('StgDataNSGName')]" },
          "StgDataSubnetAddressPrefix": { "value": "[variables('StgDataSubnetAddressPrefix')]" },
          "StgProdMgmtNSGName": { "value": "[variables('StgProdMgmtNSGName')]" },
          "StgProdMgmtSubnetAddressPrefix": { "value": "[variables('StgProdMgmtSubnetAddressPrefix')]" },
          "StgWebNSGName": { "value": "[variables('StgWebNSGName')]" },
          "StgWebSubnetAddressPrefix": { "value": "[variables('StgWebSubnetAddressPrefix')]" }
        }
      }
    },
    //Create Virtual Network
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'NetworkSecurityGroupTemplate')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('PubSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('PubSubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('PubNSGName'))]"
              }
            }
          },
          {
            "name": "[variables('DevWebSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          },
          {
            "name": "[variables('DevAppSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.3.0/24"
            }
          },
          {
            "name": "[variables('DevDataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.4.0/24"
            }
          },
          {
            "name": "[variables('BetaWebSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.5.0/24"
            }
          },
          {
            "name": "[variables('BetaAppSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.6.0/24"
            }
          },
          {
            "name": "[variables('BetaDataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.7.0/24"
            }
          },
          {
            "name": "[variables('StgWebSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.8.0/24"
            }
          },
          {
            "name": "[variables('StgAppSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.9.0/24"
            }
          },
          {
            "name": "[variables('StgDataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.10.0/24"
            }
          },
          {
            "name": "[variables('ProdWebSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.11.0/24"
            }
          },
          {
            "name": "[variables('ProdAppSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.12.0/24"
            }
          },
          {
            "name": "[variables('ProdDataSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.13.0/24"
            }
          },
          {
            "name": "[variables('DevBetaMgmtSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.14.0/24"
            }
          },
          {
            "name": "[variables('StgProdMgmtSubnetName')]",
            "properties": {
              "addressPrefix": "10.0.15.0/24"
            }
          }
        ]
      } //VNet Properties close
    }, //, //Virtual Network close
    //Create Local Network Site/Gateway
    //{
    //  "apiVersion": "2015-05-01-preview",
    //  "type": "Microsoft.Network/localnetworkgateways",
    //  "name": "[concat(parameters('customerPrefix'),'-lan01')]",
    //  "tags": {
    //    "displayName": "Customer Local Network"
    //  },
    //  "properties": {
    //    "ipAddress": "[parameters('customerVPNAddress')]",
    //    "subnet": "[parameters('customerVPNSubnet')]",
    //    "vendor": "[parameters('customerVPNVendor')]",
    //    "platform": "[parameters('customerVPNplatform')]",
    //    "osFamily": "[parameters('customerVPNfamily')]"
    //  }
    //},
    ////Create Virtual Network Gateway
    //{
    //  "apiVersion": "2015-05-01-preview",
    //  "type": "Microsoft.Network/virtualNetworkGateways",
    //  "name": "[concat(parameters('virtualNetworkName'),'-Gateway')]",
    //  "tags": {
    //    "displayName": "Customer Virtual Network Gateway"
    //  },
    //  "properties": {
    //    "gatewayType": "DynamicRouting",
    //    "gatewaySize": "Default",
    //    "bgpEnabled": false,
    //    "vpnClientAddressPool": "[parameters('customerVPNP2SSubnet')]",
    //    "defaultSite": "[concat(parameters('customerPrefix'),'-lan01')]"
    //  }
    //},
    //Create Public Virtual Machines - Kemp or other NLB and WAF device
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('PubvmName'), '01')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('PubStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('PubnicName'), '0')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('PubAvailabilitySetName'))]"
      ],
      "tags": {
        "displayName": "Public VM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('PubAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('PubVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('PubvmName'), '01')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('PubimagePublisher')]",
            "offer": "[variables('PubimageOffer')]",
            "sku": "[variables('PubimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('PubStorageAccountName'),'.blob.core.windows.net/vhds/',variables('PubvmName'),'01-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('PubnicName')), '0')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('PubvmName'), '02')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('PubStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('PubnicName'), '1')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('PubAvailabilitySetName'))]"
      ],
      "tags": {
        "displayName": "Public VM"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('PubAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('PubVMSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('PubvmName'), '02')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('PubimagePublisher')]",
            "offer": "[variables('PubimageOffer')]",
            "sku": "[variables('PubimageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('PubStorageAccountName'),'.blob.core.windows.net/vhds/',variables('PubvmName'),'02-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('PubnicName')), '1')]"
            }
          ]
        }
      }
    },
    //Create load balancer for public access
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Public Load Balancer"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": "5",
              "numberOfProbes": 2
            }
          }
        ]
      }
    }
  ]
}
