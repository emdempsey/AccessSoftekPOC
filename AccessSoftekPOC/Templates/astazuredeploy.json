{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "Office365",
      "metadata": {
        "description": "Admin password on provisioned machines"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "nimda",
      "metadata": {
        "description": "Admin username for virtual machines"
      }
    },
    "customerPrefix": {
      "metadata": {
        "description": "The 3 character prefix of the customer name"
      },
      "type": "string",
      "defaultValue": "sky"
    },
    "customerVPNAddress": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": {
        "description": "The IP address of the VPN device on the customer network"
      }
    },
    "customerVPNfamily": {
      "type": "string",
      "defaultValue": "IOS 15.1 (dynamic)",
      "metadata": {
        "description": "The OS family of the VPN Device"
      }
    },
    "customerVPNP2SSubnet": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "A single IP address prefix inside the list of prefixes that will be used when assigning IP addresses to incoming Point-to-Site client connection requests"
      }
    },
    "customerVPNPlatform": {
      "type": "string",
      "defaultValue": "ISR",
      "metadata": {
        "description": "The platform of the VPN device"
      }
    },
    "customerVPNSubnet": {
      "type": "string",
      "defaultValue": "172.16.0.0/16",
      "metadata": {
        "description": "One of the subnets onthe customer's local network"
      }
    },
    "customerVPNVendor": {
      "type": "string",
      "defaultValue": "Cisco",
      "metadata": {
        "description": "The vendor of the VPN device"
      }
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "defaultValue": "astservices",
      "metadata": {
        "description": "lower case DNS name used for public access to the services"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "West US",
        "East US",
        "North Central US",
        "Central US",
        "South Central US",
        "East Asia",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "vnetAddressSpacePrefix": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "The address space used by the Virtual network"
      }
    }
  },
  "variables": {
    "BetaEnvTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/BetaEnv.json",
    "DevBetaMgmtTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/DevBetaMgmt.json",
    "DevEnvTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/DevEnv.json",
    "ProdEnvTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/ProdEnv.json",
    "PublicTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/Public.json",
    "StgEnvTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/StgEnv.json",
    "StgProdMgmtTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/StgProdMgmt.json",
    "VNetTemplateLink": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/VNet.json",
    "virtualNetworkName": "[concat(parameters('customerPrefix'),'vnet01')]"
  },
  "resources": [
    //Create Virtual Network
    {
      "apiVersion": "2015-01-01",
      "name": "VNetTemplate",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('VNetTemplateLink')]", "contentVersion": "1.0.0.0" },
        "parameters": {
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "customerVPNAddress": { "value": "[parameters('customerVPNAddress')]" },
          "customerVPNfamily": { "value": "[parameters('customerVPNfamily')]" },
          "customerVPNP2SSubnet": { "value": "[parameters('customerVPNP2SSubnet')]" },
          "customerVPNPlatform": { "value": "[parameters('customerVPNPlatform')]" },
          "customerVPNSubnet": { "value": "[parameters('customerVPNSubnet')]" },
          "customerVPNVendor": { "value": "[parameters('customerVPNVendor')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "vnetAddressSpacePrefix": { "value": "[parameters('vnetAddressSpacePrefix')]" }
        }
      }
    },
    //Create Public resources
    {
      "apiVersion": "2015-01-01",
      "name": "PublicTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'VNetTemplate')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('PublicTemplateLink')]", "contentVersion": "1.0.0.0" },
        "parameters": {
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "customerVPNAddress": { "value": "[parameters('customerVPNAddress')]" },
          "customerVPNSubnet": { "value": "[parameters('customerVPNSubnet')]" },
          "customerVPNVendor": { "value": "[parameters('customerVPNVendor')]" },
          "customerVPNPlatform": { "value": "[parameters('customerVPNPlatform')]" },
          "customerVPNfamily": { "value": "[parameters('customerVPNfamily')]" },
          "customerVPNP2SSubnet": { "value": "[parameters('customerVPNP2SSubnet')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vnetAddressSpacePrefix": { "value": "[parameters('vnetAddressSpacePrefix')]" },
          "dnsNameForPublicIP": { "value": "[parameters('dnsNameForPublicIP')]" }
        }
      }
    },
    //Create Dev-Beta Mgmt Stack
    {
      "apiVersion": "2015-01-01",
      "name": "DevBetaMgmtTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'VNetTemplate')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('DevBetaMgmtTemplateLink')]" },
        "parameters": {
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    //Create Stg-Prod Mgmt Stack
    {
      "apiVersion": "2015-01-01",
      "name": "StgProdMgmtTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'VNetTemplate')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('StgProdMgmtTemplateLink')]" },
        "parameters": {
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    },
    //Create Dev Environment Stack
    {
      "apiVersion": "2015-01-01",
      "name": "DevEnvTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'DevBetaMgmtTemplate')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('DevEnvTemplateLink')]" },
        "parameters": {
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "vnetAddressSpacePrefix": { "value": "[parameters('vnetAddressSpacePrefix')]" }
        }
      }
    },
    //Create Beta Environment Stack
    {
      "apiVersion": "2015-01-01",
      "name": "BetaEnvTemplate",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'DevBetaMgmtTemplate')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('BetaEnvTemplateLink')]" },
        "parameters": {
          "customerPrefix": { "value": "[parameters('customerPrefix')]" },
          "location": { "value": "[parameters('location')]" },
          "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
          "adminUsername": { "value": "[parameters('adminusername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" }
        }
      }
    } //,
    ////Create Stage Environment Stack
    //{
    //  "apiVersion": "2015-01-01",
    //  "name": "StgEnvTemplate",
    //  "type": "Microsoft.Resources/deployments",
    //  "dependsOn": [
    //    "[concat('Microsoft.Resources/deployments/', 'StgProdMgmtTemplate')]"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": { "uri": "[variables('StgEnvTemplateLink')]" },
    //    "parameters": {
    //      "customerPrefix": { "value": "[parameters('customerPrefix')]" },
    //      "location": { "value": "[parameters('location')]" },
    //      "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
    //      "adminUsername": { "value": "[parameters('adminusername')]" },
    //      "adminPassword": {"value": "[parameters('adminPassword')]"}
    //    }
    //  }
    //},
    ////Create Prod Environment Stack
    //{
    //  "apiVersion": "2015-01-01",
    //  "name": "ProdEnvTemplate",
    //  "type": "Microsoft.Resources/deployments",
    //  "dependsOn": [
    //    "[concat('Microsoft.Resources/deployments/', 'StgProdMgmtTemplate')]"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": { "uri": "[variables('ProdEnvTemplateLink')]" },
    //    "parameters": {
    //      "customerPrefix": { "value": "[parameters('customerPrefix')]" },
    //      "location": { "value": "[parameters('location')]" },
    //      "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
    //      "adminUsername": { "value": "[parameters('adminusername')]" },
    //      "adminPassword": {"value": "[parameters('adminPassword')]"}
    //    }
    //  }
    //}
  ]
}
