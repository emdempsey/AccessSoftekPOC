{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on provisioned machines"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for virtual machines"
      }
    },
    "customerLocation": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "customerPrefix": {
      "metadata": {
        "description": "The 3 character prefix of the customer name"
      },
      "type": "string"
    },
    "DomainName": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual Network to be created"
      }
    }
  },
  "variables": {
    "AssetLocation": "https://raw.githubusercontent.com/emdempsey/AccessSoftekPOC/master/AccessSoftekPOC/Templates/DSC",
    //"AssetLocation": "https://raw.githubusercontent.com/dscninja/ast/master/AccessSoftekPOC/Templates/DSC",
    "DataDiskSize": 1023,
    "DataDSCConfigurationFunction": "astsqldsc.ps1\\sql",
    "DataDSCModulesURL": "[concat(variables('AssetLocation'),'/astsqldsc.ps1.zip')]",
    "DataimageOffer": "SQL2014-WS2012R2",
    "DataimagePublisher": "MicrosoftSQLServer",
    "DataimageSKU": "Standard",
    "DatanicName": "[concat(variables('Environment'),'-Data-nic')]",
    "DataStorageAccountName": "[concat(parameters('customerPrefix'),variables('EnvAbbr'),'dstor01')]",
    "DataSubnetName": "[concat(variables('Environment'),'Data')]",
    "DataSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables('DataSubnetName'))]",
    "DatavmName": "[concat(parameters('customerPrefix'),variables('Environment'),'data')]",
    "DataVMSize": "Standard_A4",
    "EnvAbbr": "b",
    "Environment": "beta",
    "OctEnv": "Skyline-Test",
    "OctRoleApp": "ofm-ds",
    "OctRoleData": "ofm-ds-db",
    "OctRoleWeb": "ofm-web",
    "storageAccountType": "Standard_LRS",
    "vnetID": "[resourceID('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]"
  },
    "resources": [
        //Create Storage account for Data VMs
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('DataStorageAccountName')]",
            "location": "[parameters('customerLocation')]",
            "tags": {
                "displayName": "Data Storage Account"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        //Create Data Network Interface
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('DatanicName'), '0')]",
            "location": "[parameters('customerLocation')]",
            "tags": {
                "displayName": "Data Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAlcustomerLocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('DataSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        //Create Data Virtual Machines
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('DatavmName'), '0')]",
            "location": "[parameters('customerLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('DataStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('DatanicName'), '0')]"
            ],
            "tags": {
                "displayName": "Data VM"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('DataVMSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('DatavmName'), '0')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('DataimagePublisher')]",
                        "offer": "[variables('DataimageOffer')]",
                        "sku": "[variables('DataimageSKU')]",
                        "version": "latest"
                    },
                  "osDisk": {
                    "name": "osdisk",
                    "vhd": {
                      "uri": "[concat('http://',variables('DataStorageAccountName'),'.blob.core.windows.net/vhds/',variables('DatavmName'),'0-osdisk.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  },
                  "dataDisks": [
                    {
                        "vhd": {
                            "uri": "[concat('http://',variables('DataStorageAccountName'),'.blob.core.windows.net/vhds/',variables('DatavmName'),'-Data-01.vhd')]"
                        },
                        "name": "[concat(variables('DatavmName'), '-02-data-disk-01')]",
                        "caching": "None",
                        "createOption": "empty",
                        "diskSizeGB": "[variables('DataDiskSize')]",
                        "lun": 0
                    },
                    {
                        "vhd": {
                            "uri": "[concat('http://',variables('DataStorageAccountName'),'.blob.core.windows.net/vhds/',variables('DatavmName'),'-Data-02.vhd')]"
                        },
                        "name": "[concat(variables('DatavmName'), '-02-data-disk-02')]",
                        "caching": "None",
                        "createOption": "empty",
                        "diskSizeGB": "[variables('DataDiskSize')]",
                        "lun": 1
                    }
                  ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[concat(resourceId('Microsoft.Network/networkInterfaces',variables('DatanicName')), '0')]"
                        }
                    ]
                }
            }
        },
            //Data DSC
            {
                "apiVersion": "2015-05-01-preview",
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "[concat(variables('DataVMName'),'0/CreateData')]",
                "location": "[parameters('customerLocation')]",
                "tags": {
                    "displayName": "Data DSC"
                },
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', variables('DataVMName'),'0')]"
                ],
                "properties": {
                    "publisher": "Microsoft.PowerShell.Test",
                    "type": "DSC",
                    "typeHandlerVersion": "1.10",
                    "settings": {
                        "ModulesUrl": "[variables('DataDSCModulesURL')]",
                        "ConfigurationFunction": "[variables('DataDSCConfigurationFunction')]",
                        "Properties": {
                            "DomainName": "[parameters('DomainName')]",
                            "octEnv": "[variables('OctEnv')]",
                            "octRole":  "[variables('OctRoleData')]",
                            "AdminCreds": {
                                "UserName": "[parameters('adminUserName')]",
                                "Password": "PrivateSettingsRef:AdminPassword"
                            }
                        }
                    },
                    "protectedSettings": {
                        "Items": {
                            "AdminPassword": "[parameters('adminPassword')]"
                        }
                    }
                }
            }
        ]
}
